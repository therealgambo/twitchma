# twitch:
#   username: <string> Your twitch.tv username
#   auth_token: <string> twitch.tv OAuth2 authentication token
#   client_id: <string> twitch.tv client ID
#   log_level: <string> Log level output, valid options: debug, info, warning, error, critical
twitch:
  username: "my-twitch-username"
  auth_token: "oauth:....."
  client_id: "twitch-client-id"
  log_level: "debug"

# grandma:
#   address: <string> IPv4 address of your console / onPC
#   port: <integer> Telnet port to connect on, default 30000 for GrandMA2
#   username: <string> Username to login with, default Administrator
#   password: <string> Password to login with, default admin
grandma:
  address: "127.0.0.1"
  port: 30000
  username: "Administrator"
  password: "admin"

# bot:
# command_prefix: <string> Single character identifier to indicate message is a command
# command_timeout: <integer> Default command interval timeout (in seconds)
# additional_channels: <[]string> List of additional channels that the bot should join & listen on
bot:
  command_prefix: "!"
  command_timeout: 30
  additional_channels:
    - "christianjackson512"

commands:
#  twitch_events:
#    event_usernotice_subscription: Twitch event, user subscribed to channel
#      command: <string> user defined GrandMA2 command to execute
#    event_part: Twitch chat, user part/left event
#      command: <string> user defined GrandMA2 command to execute
#    event_join: Twitch chat, user joined event
#      command: <string> user defined GrandMA2 command to execute
#    event_command_error: Executed when a failed command is received
#      command: <string> user defined GrandMA2 command to execute
  twitch_events:
    event_usernotice_subscription:
      command: "Go Seq 8"
    event_part:
      command: "Go Seq 23; Go Seq 4"
    event_join:
      command: "Go Seq 22; Go Seq 3"
    event_command_error:
      command: "Go Seq 8; Go Seq 7"

#  keyword_mapping:
#    mappings:
#    - word: <string> User defined word that triggers the command
#      timeout: <integer> Timeout interval (in seconds) between commands, command can be executed once per timeout interval
#      access: <string> Restrict command access to specific user types: "all|mod|subscriber|turbo|owner"
#      command: <string> user defined GrandMA2 command to execute
  keyword_mapping:
    mappings:
    - word: "partymode"
      timeout: 60
      access: "all"
      command: "Go Seq 10"
    - word: "spots"
      timeout: 10
      access: "mod"
      command: "Go Seq 3"
    - word: "led"
      timeout: 20
      access: "subscriber"
      command: "Go Seq 4"
    - word: "seizure"
      timeout: 0
      access: "owner"
      command: "sm 3.1 at 100"